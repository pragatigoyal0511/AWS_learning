Networking is how you connect computers around the world and allow them to communicate with one another. 

Without the correct address, postal workers cannot properly deliver the letter. 
In the digital world, computers handle the delivery of messages in a similar way. This is called routing.
Now, jaise we used to send letter in old times to communicate with other person, what we used to do?
We used send letters, which had below 3 parts
1. the letter inside
2. from section - who is sending the letter with complete address
3. to section - for whom the letter is addressed to with complete address

Now address has house no, street, city, state , pincode like this



So, in computer world, its the IP address which denotes kis computer se baat karni hai.
To properly route your messages to a location, you need an address. Just like each home has a mailing address, each computer has an IP address. 
However, instead of using the combination of street, city, state, zip code, and country, the IP address uses a combination of bits, 0s and 1s.


Example of 32 bit ip address
11000000 10101000 00000001 00011110 is a 32-bit address written in binary format.

Now, this is total 8+8+8+8 = 32 bits

->IPv4 notation:

these 32 bits are grouped into groups of 8 bits, also called octets. Each of these groups is converted into decimal format separated by a period.

An IPv4 address is written in decimal digits made up of four eight bit fields separated by a period.
An IPv4 address, for example, 192.168.1.30 is converted from four groups of eight bits.


-> Classless Inter-Domain Routing (CIDR)  notation:
If we want to express range of IP address tph kaise karenge?
192.168.1.0 and 192.168.1.255, how can you do that?

One way is to use CIDR notation. CIDR notation is a compressed way of representing a range of IP addresses. Specifying a range determines how many IP addresses are available to you.
CIDR notation is shown here.
192.168.1.0/24  -> slash ke baad wala batata hai kitni fixed binary digits hain..8+8+8 fix ho gai..ab remaining 8 mein 1/0 aa sakte hain..toh total 256 combinations.


The number after the forward slash denotes how many bits in an IP address are fixed.

It begins with a starting IP address and is separated by a forward slash (the / character) followed by a number.
The number at the end specifies how many of the bits of the IP address are fixed. In this example, the first 24 bits of the IP address are fixed. 
The rest (the last 8 bits) are flexible.

The higher the number after the /, the smaller the number of IP addresses in your network. For example, a range of 192.168.1.0/24 is smaller than 192.168.1.0/16.
kyonki fix digits badh gay toh option bache hue 32-fix digits = kam ho jaaynge toh less options.

In AWS, the smallest IP range you can have is /28, which provides 16 IP addresses. The largest IP range you can have is a /16, which provides 65,536 IP addresses.



->VPC 
Virtual Private Cloud
Ye ek tarah se hamara network mil jata hai ki ismein taaki koi aur traffic ni aane paay, jo apan chahate hain apni application ke liye jo apan define karein wahi hi aay..

A virtual private cloud (VPC) is an isolated network that you create in the AWS Cloud, similar to a traditional network in a data center. 

VPC banate waqt hamein choose karne hote hain below factors:
0. name of the factor
1. region select karna hota hai (as jaise humne dekha tha ki hum akhan apni application depliy karna chahte hain vo region hamein hi dekhna hota hai based on compliance,
pricing, latency and availability)
2. We have to give the Ip address range in CIDR notation - This determines the size of your network.

Each VPC can have up to five CIDRs: one primary and four secondaries for IPv4. Each of these ranges can be between /28 (in CIDR notation) and /16 in size.

Q. What ‚ÄúPrimary‚Äù CIDR Means

When you first create a VPC ‚Äî
you must give one CIDR block ‚Äî this is called the primary CIDR.

Example:
10.0.0.0/16 ‚Üê this is your primary CIDR block.

All your subnets will take portions (like /24, /26) from this block.

Q. Why Would You Add ‚ÄúSecondary‚Äù CIDR Blocks?

Sometimes, your original CIDR runs out of IPs ‚Äî(toh jaise neeche dekhenge toh aur ranges add kar dia by changing last 8 bits value to 1 to 4 from the first 16 jo fixed hain..)
maybe you planned 10.0.0.0/24 (just 256 IPs) and filled them all.

Instead of creating a new VPC,
AWS lets you add more CIDR ranges (up to 4 extra) to the same VPC.

These new ones are called secondary CIDR blocks.

So your VPC could have:
| CIDR Type   | Example CIDR | Purpose             |
| ----------- | ------------ | ------------------- |
| Primary     | 10.0.0.0/16  | Main network range  |
| Secondary 1 | 10.1.0.0/16  | Additional IP range |
| Secondary 2 | 10.2.0.0/16  | Additional IP range |
| Secondary 3 | 10.3.0.0/16  | Additional IP range |
| Secondary 4 | 10.4.0.0/16  | Additional IP range |


-> Ab VPC ke ander hum subnets bana sakte hain.. jinko apne VPC ki range mein se IPs de sakte hain
Why subnets ?
taaki hum ye usmein granular level pe secure kar sakein.
Jo application server ka access hamein public ko dena hai use public subnet mein daal denge
jo servers like database, kisiko access ni dena hota toh hum use provate subnet mein daal dete hain

Now, subnet banane ke liye
1. hamein vpc choos karna hoga hamara jiske ander suubnt banaynge.i.e VPC that you want your subnet to live in‚Äîin this case: VPC (10.0.0.0/16)
2. Availability Zone that you want your subnet to live in‚Äîin this case: Availability Zone 1
3. IPv4 CIDR block for your subnet, which must be a subset of the VPC CIDR block‚Äîin this case: 10.0.0.0/24


When you launch an EC2 instance, you launch it inside a subnet, which will be located inside the Availability Zone that you choose.


->High availability with a VPC 

we craete ubnets as in 1 AZ to another AZ as well, taaki if by chance 1 AZ fails, everything safe in another AZ



->Reserved IPs

For AWS to configure your VPC appropriately, AWS reserves five IP addresses in each subnet. These IP addresses are used for routing, Domain Name System (DNS), and network management.


->Internet gateway

jaise hamara modem hamare computer ko internet se conne ct karta hai, vaise internet gateway hamare vPC ko internet se connect karta hai..

-> Virtual private Gateway

ab we wnat ki sirf office ka traffic aana chahyea hum VPG use karnege.




-> AWS VPC security:

We have NACL and Security group

VPC (your private network)
 ‚îú‚îÄ‚îÄ Subnets
 ‚îÇ    ‚îú‚îÄ‚îÄ Network ACL (applies to entire subnet)
 ‚îÇ    ‚îî‚îÄ‚îÄ EC2 instances (each has a Security Group)

So:

Network ACL (NACL) = security gate for the whole subnet
Security Group (SG) = security gate for individual EC2 instances (or ENIs)

They both filter traffic, but at different layers


->Newtork ACL
üîπ Full form: Network Access Control List
üîπ Applies to: The subnet level

Every subnet in a VPC is associated with one NACL (either custom or default).

It acts like a firewall at the boundary of your subnet.
It checks traffic entering or leaving the subnet.


| Feature          | Description                                                 |
| ---------------- | ----------------------------------------------------------- |
| Level            | **Subnet level**                                            |
| Controls         | **Inbound + Outbound traffic**                              |
| Rules type       | **Numbered rules** (like rule 100, 110, etc.)               |
| Rule evaluation  | From lowest number upward; first match wins                 |
| Stateful?        | ‚ùå **Stateless** ‚Äî return traffic must be explicitly allowed |
| Default behavior | Deny all traffic unless allowed                             |
| Use case         | Add one more security layer around subnets                  |


Example

Say you have:

Public subnet (for web servers)

Private subnet (for databases)

You could set NACLs like:
| Subnet  | Allowed Inbound                  | Allowed Outbound      |
| ------- | -------------------------------- | --------------------- |
| Public  | HTTP (80), HTTPS (443), SSH (22) | All                   |
| Private | Only from public subnet          | Only to public subnet |


So NACL = border guard for that subnet üõ°Ô∏è


->Security Group (SG)

üîπ Applies to: The instance (EC2, Lambda ENI, etc.) level
üîπ Think of it like a personal firewall for each resource.

It controls what traffic can reach or leave a specific EC2 instance.

Security Group Characteristics:

| Feature          | Description                                                            |
| ---------------- | ---------------------------------------------------------------------- |
| Level            | **Instance (ENI)** level                                               |
| Controls         | **Inbound + Outbound traffic**                                         |
| Rule type        | No numbers; all rules are checked                                      |
| Stateful?        | ‚úÖ **Stateful** ‚Äî if inbound is allowed, return traffic is auto allowed |
| Default behavior | Deny all inbound, allow all outbound                                   |
| Use case         | Protect individual EC2s, load balancers, etc.                          |


Example:
For your web server EC2,
you can have an SG like:
| Direction | Allowed Traffic            | Description                        |
| --------- | -------------------------- | ---------------------------------- |
| Inbound   | TCP 80 (HTTP), 443 (HTTPS) | Allow web access                   |
| Inbound   | TCP 22 (SSH) from admin IP | Allow SSH only for admin           |
| Outbound  | All                        | Let EC2 call APIs or update itself |


So SG = personal firewall for your EC2 instance.

5Ô∏è‚É£ Why We Need Both

‚úÖ NACLs protect the entire subnet ‚Äî
like a gate outside your colony.
If traffic is not allowed there, it never even reaches your building.

‚úÖ Security Groups protect individual houses (EC2s) inside ‚Äî
they add one more firewall around your instance.

Together:
NACL = outer wall of your subnet
SG = inner wall around each instance

This two-layer defense is called defense-in-depth ‚Äî if one rule misconfigured, the other still protects you.


6Ô∏è‚É£ Analogy (Simple & Memorable)

üè† Think of your VPC as a residential society:

NACL = Gate at the entrance to the society ‚Üí controls which cars can enter or leave your colony.
Security Group = Gate at your own house ‚Üí controls who can ring your doorbell or enter your home.

So:
If your colony gate blocks all unknown vehicles ‚Üí they never reach your house.
If someone gets past the colony gate ‚Üí your house gate (security group) still checks them again.

Two layers of security ‚Äî for safety and control
